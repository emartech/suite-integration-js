name: Suite Integration Js

on: [push, pull_request]

env:
  NPM_TOKEN: ${{ secrets.NPM_DEPLOYER_TOKEN }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: eu-west-1
  REDIRECTOR_API_SECRET_STAGING: ${{ secrets.REDIRECTOR_API_SECRET_STAGING }}
  REDIRECTOR_API_SECRET_PRODUCTION: ${{ secrets.REDIRECTOR_API_SECRET_PRODUCTION }}
  REDIRECTOR_DEPLOY: true
  REDIRECTOR_NAME: sijs
  S3_BUCKET: ems-suite-integration-js-staging

jobs:
  test:
    name: Tests ðŸš¦
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Use correct Node version
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
      - name: Cache node_modules
        id: cache_node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node_modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: ${{ steps.cache_node_modules.outputs.cache-hit != 'true' }}
        continue-on-error: true
        run: |
          npm config set //registry.npmjs.org/:_authToken=$NPM_TOKEN
          npm ci
      - name: Run tests
        run: npm test
  deploy:
    name: Deploy ðŸš¢
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Use correct Node version
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
      - name: Cache node_modules
        id: cache_node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node_modules-${{ hashFiles('**/package-lock.json') }}
      - name: Deploy to staging
        if: github.ref_name == 'master'
        run: |
          npm run build:staging
          npm run deploy:staging
